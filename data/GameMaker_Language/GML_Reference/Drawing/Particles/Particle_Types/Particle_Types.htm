<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../../../../..";
    gCommonRootRelPath = "../../../../..";
    gTopicId = "9.2.5.10.2";
  
//]]></script>

  <script type="text/javascript" src="../../../../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../../../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../../../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../../../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../../../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../../../../template/styles/topic.min.css"/>
  <link rel="stylesheet" type="text/css" href="../../../../../template/Charcoal_Grey/topicheader.css"/>
  <meta name="topic-status" content="Draft"/>

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <title>Particle Types</title>
  <meta name="generator" content="Adobe RoboHelp 2019"/>
  <link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css"/>
  <meta name="rh-authors" content="Mark Alexander"/>
  <meta name="topic-comment" content="Reference section for the Particle Type functions and variables"/>
  <meta name="rh-index-keywords" content=""/>
  <meta name="search-keywords" content="Particle Types"/>
</head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header" onclick="rh._.goToFullLayout()">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="Particle Types">
        <span>Particle Types</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <span>Click here to see this page in full context</span>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Particle Types</h1>
  <p>Particles are the graphic effects that can be created by the use of particle systems in a game. The particles that you define using these functions can be used in any system that you create and the normal procedure would be to define all your particles
    once at the start of a game and store their index values in global variables. These global variables can then be used to burst, emit or create particles at any time throughout the game. You can also create, use and then destroy particles as needed
    if memory is an issue or if you wish many different types but only at specific points in your game. Whatever you choose, particles are a very versatile resource!</p>
  <p>Particles need to be created and have their index stored in a variable so that all further particle routines can access them correctly. The following functions are used to create, check for, clear and destroy particle types:</p>
  <p> </p>
  <ul class="colour">
    <li><a href="part_type_exists.htm">part_type_exists</a></li>
    <li><a href="part_type_create.htm">part_type_create</a></li>
    <li><a href="part_type_destroy.htm">part_type_destroy</a></li>
    <li><a href="part_type_clear.htm">part_type_clear</a></li>
  </ul>
  <p> </p>
  <p>Once you have created your particle type you should give it a <i>shape</i>. This can be one of the 14 built in shapes which are 64x64 pixel sprites with alpha blending, or you can use your own sprites which can be animated, static or use
    random sub-images. The following functions define the visual base shape of each particle:</p>
  <p> </p>
  <ul class="colour">
    <li><a href="part_type_shape.htm">part_type_shape</a></li>
    <li><a href="part_type_sprite.htm">part_type_sprite</a></li>
  </ul>
  <p> </p>
  <p>The following image shows the 14 built in particle types that you can choose from:</p>
  <p><img alt="The different built-in particle sprites" class="center" src="../../../../../assets/Images/Scripting_Reference/GML/Reference/Drawing/Particle_Sprites.png"/>Once you have chosen the sprite for the particle type (either a default shape or your
    own) you can indicate the size and scale of it. The size can be specified as a range and all particles will be created with a size chosen from within the given range. The scale is the &quot;base&quot; value for the x and y axis scale of the particle <i>before</i> any
    size variations are added and the following functions are used to control these values:</p>
  <p> </p>
  <ul class="colour">
    <li><a href="part_type_size.htm">part_type_size</a></li>
    <li><a href="part_type_scale.htm">part_type_scale</a></li>
  </ul>
  <p> </p>
  <p>Particles can also have an orientation and motion. As with most particle functions, the speed, direction and orientation are resolved as a random value that is selected from a given range and can be set with the following functions:</p>
  <p> </p>
  <ul class="colour">
    <li><a href="part_type_speed.htm">part_type_speed</a></li>
    <li><a href="part_type_direction.htm">part_type_direction</a></li>
    <li><a href="part_type_gravity.htm">part_type_gravity</a></li>
    <li><a href="part_type_orientation.htm">part_type_orientation</a></li>
  </ul>
  <p> </p>
  <p>Once you have the style and movement of your particles sorted out, you can then set their colour and alpha values, both of which can be set as an absolute value during the whole lifespan of the particle, or as a scale of values that go from one to the
    other gradually. Note that there is also a special function that permits you to set the blending for particles and their surroundings, and this can be either normal or additive and gives some fantastic effects- The functions governing colour, alpha
    and blending are:</p>
  <p> </p>
  <ul class="colour">
    <li><a href="part_type_colour_mix.htm">part_type_colour_mix</a></li>
    <li><a href="part_type_colour_rgb.htm">part_type_colour_rgb</a></li>
    <li><a href="part_type_colour_hsv.htm">part_type_colour_hsv</a></li>
    <li><a href="part_type_colour1.htm">part_type_colour1</a></li>
    <li><a href="part_type_colour2.htm">part_type_colour2</a></li>
    <li><a href="part_type_colour3.htm">part_type_colour3</a></li>
    <li><a href="part_type_alpha1.htm">part_type_alpha1</a></li>
    <li><a href="part_type_alpha2.htm">part_type_alpha2</a></li>
    <li><a href="part_type_alpha3.htm">part_type_alpha3</a></li>
    <li><a href="part_type_blend.htm">part_type_blend</a></li>
  </ul>
  <p> </p>
  <p>Particles exist on-screen for a limited amount of time and this is called their &quot;lifetime&quot;. Particle lifetimes are measured in steps and (like previous functions) this is expressed as a range of values from which the particle will be given
    a specific lifetime. There are also a couple of interesting functions which can be used to make particles generate <i>other</i> particles, either each step or when they &quot;die&quot; (ie: Are removed from the screen), but
    be very careful with these functions as they can quickly create thousands of particles and crash the game! The functions that set lifetime and step or death emitting are as follows:</p>
  <p> </p>
  <ul class="colour">
    <li><a href="part_type_life.htm">part_type_life</a></li>
    <li><a href="part_type_step.htm">part_type_step</a></li>
    <li><a href="part_type_death.htm">part_type_death</a></li>
  </ul>
  <p> </p>
  <p>It is worth noting that creating particles through code can often be a laborious and time-consuming process due to the large number of parameters that can be changed and tweaked. For that reason it is recommended that you search around and get a hold
    of some type of <b>Particle Designer</b> (or make one yourself!) to take the drudgery out of particle creation.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="../Particles.htm">Particles</a></div>
        <div style="float:right">Next: <a href="../Particle_Emitters/Particle_Emitters.htm">Particle Emitters</a></div>
      </div>
    </div>
    <h5>© Copyright YoYo Games Ltd. 2020 All Rights Reserved</h5>
  </div>
  <!-- KEYWORDS
Particle Types
-->
  <!-- TAGS
particle_type_functions
-->

</body></html>