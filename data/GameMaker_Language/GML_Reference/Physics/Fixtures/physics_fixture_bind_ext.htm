<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../../../..";
    gCommonRootRelPath = "../../../..";
    gTopicId = "9.2.11.3.0_3";
  
//]]></script>

  <script type="text/javascript" src="../../../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../../../template/styles/topic.min.css"/>
  <link rel="stylesheet" type="text/css" href="../../../../template/Charcoal_Grey/topicheader.css"/>
  <meta name="topic-status" content="Draft"/>

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <title>physics_fixture_bind_ext</title>
  <meta name="generator" content="Adobe RoboHelp 2019"/>
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css"/>
  <meta name="rh-authors" content="Mark Alexander"/>
  <meta name="topic-comment" content="Reference page for physics_fixture_bind_ext"/>
  <meta name="rh-index-keywords" content="physics_fixture_bind_ext"/>
  <meta name="search-keywords" content="physics_fixture_bind_ext"/>
</head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header" onclick="rh._.goToFullLayout()">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="physics_fixture_bind_ext">
        <span>physics_fixture_bind_ext</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <span>Click here to see this page in full context</span>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>physics_fixture_bind_ext</h1>
  <p>Once we have defined our fixture it has to be bound to an instance. This means that its <i>properties</i> are transferred to the selected instance, <b>not the actual fixture itself</b>, so that one fixture can be bound to multiple instances if all are
    to have the same properties. You can specify an object index for the target and all instances present in the room at the time will receive that fixtures properties (but not any new instances of the object created later), or you can use the special
    keywords <i>other</i> and <i>all</i>. You can even specify a parent object and all children instances with that parent will also receive the fixture. Once the fixture has been bound to all the instances that you need, it can be deleted if no longer
    necessary and the instances with that fixtures properties will not be affected and maintain those properties.</p>
  <p>Normally, the fixture will be bound to the instance with the center of mass being positioned at the origin of the instance, however this is not always what you require and so this function also permits you to offset the x and y position where the fixture
    is bound by a given amount (if you do not require this then use <a href="physics_fixture_bind.htm"><tt>physics_fixture_bind()</tt></a> instead). It is important to note that a fixture can only support a <i>single</i> offset, as adding multiple offsets
    to a single fixture is not supported by Box2D.</p>
  <p><img alt="Extended physics fixture binding example" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Physics/physics_fixture_bind_ext_image.png"/>The function will also return a unique &quot;id&quot; value for the <i>bound</i>    fixture (<b>not the fixture itself</b>) which can then be used to remove (&quot;un-bind&quot;) the physics properties from the instance using the function <a href="physics_remove_fixture.htm"><tt>physics_remove_fixture()</tt></a>. This permits you
    to add and remove physical properties from an instance without destroying and re-creating objects.</p>
  <p class="note"><b>NOTE</b>: Fixtures should be deleted when no longer needed as failure to do so may cause a memory leak which will slow down and eventually crash your game.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">physics_fixture_bind_ext(fixture, target, xoffset, yoffset)</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>fixture</td>
        <td>the fixture that is to be bound</td>
      </tr>
      <tr>
        <td>target</td>
        <td>the target instance that is to receive the fixture (can be an instance id, an object id, <i>other</i>, or <i>all</i>)</td>
      </tr>
      <tr>
        <td>xoffset</td>
        <td>the offset along the x-axis</td>
      </tr>
      <tr>
        <td>yoffset</td>
        <td>the offset along the y-axis</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code">Real</p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">var fix, inst;<br/> fix = physics_fixture_create();<br/> physics_fixture_set_circle_shape(fix, 16);<br/> physics_fixture_set_density(fix, 1.0);<br/> inst = instance_create_layer(x, y, &quot;Instances&quot;, genericBodyObject);<br/> my_fix = physics_fixture_bind_ext(fix,
    inst, sprite_width / 2, -(sprite_height / 2));<br/> physics_fixture_delete(fix);
  </p>
  <p>The code above will create a fixture and assign its index to the variable &quot;fix&quot;. It then defines the shape and density of the fixture before binding it to the instance at an offset based on the width and height of the sprite. The index for
    the <b>bound</b> fixture is stored in the variable &quot;my_fix&quot;. Finally, the fixture itself is deleted to prevent memory leaks as it is no longer needed.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Fixtures.htm">Fixtures</a></div>
        <div style="float:right">Next: <a href="physics_fixture_set_collision_group.htm">physics_fixture_set_collision_group</a></div>
      </div>
    </div>
    <h5>© Copyright YoYo Games Ltd. 2020 All Rights Reserved</h5>
  </div>
  <!-- KEYWORDS
physics_fixture_bind_ext
-->
  <!-- TAGS
physics_fixture_bind_ext
-->

</body></html>