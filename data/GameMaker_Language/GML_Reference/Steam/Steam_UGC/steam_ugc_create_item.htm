<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../../../..";
    gCommonRootRelPath = "../../../..";
    gTopicId = "9.2.15.7.0_3";
  
//]]></script>

  <script type="text/javascript" src="../../../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../../../template/styles/topic.min.css"/>
  <link rel="stylesheet" type="text/css" href="../../../../template/Charcoal_Grey/topicheader.css"/>
  <meta name="topic-status" content="Draft"/>

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <title>steam_ugc_create_item</title>
  <meta name="generator" content="Adobe RoboHelp 2019"/>
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css"/>
  <meta name="rh-authors" content="Mark Alexander"/>
  <meta name="topic-comment" content="Reference page for steam_ugc_create_item"/>
  <meta name="rh-index-keywords" content="steam_ugc_create_item,ugc_filetype_community,ugc_filetype_microtrans"/>
  <meta name="search-keywords" content="steam_ugc_create_item,ugc_filetype_community,ugc_filetype_microtrans"/>
</head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header" onclick="rh._.goToFullLayout()">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="steam_ugc_create_item">
        <span>steam_ugc_create_item</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <span>Click here to see this page in full context</span>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>steam_ugc_create_item</h1>
  <p>This function is used to prepare the Workshop API and generate a published file ID for the item to be added. The function <i>must</i> be called before doing anything else with the item to be uploaded, as you will be required to use the unique published
    ID value that it returns in the Steam Async Event for updating. To use this function, you need to supply the Steam App ID for your game, and the use one of the following constants for the <tt>file_type</tt> argument:</p>
  <p> </p>
  <table>
    <tbody>
      <tr>
        <th>Constant</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>ugc_filetype_community</td>
        <td>This is used to create files that will be uploaded and made available to anyone in the community.</td>
      </tr>
      <tr>
        <td>ugc_filetype_microtrans</td>
        <td>This is used to describe files that are uploaded but intended only for the game to consider adding as official content.</td>
      </tr>
    </tbody>
  </table>
  <p><br/> When using this function it will return an async ID value which can then be parsed when the <a href="../../../../The_Asset_Editors/Object_Properties/Async_Events/Steam.htm">Steam Asynchronous</a> event is triggered to report the creation of the
    item. The event will contain the following key/map values in the <a href="../../../GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><tt>async_load</tt></a> ds_map:</p>
  <ul class="colour">
    <li>&quot;<b>id</b>&quot; - The async ID returned by the calling function</li>
    <li>&quot;<b>result</b>&quot; - The result of the operation (a real value). This will either be the GML constant <tt>ugc_result_success</tt> or some other real number. So you should check for this constant to ensure that the call was successful, and if
      otherwise somthing has not worked correctly. The rest of the possible values returned are shown as the result of the Steam &quot;EResult&quot; value and you should see <tt>steamclientpublic.h</tt> in the SDK headers for all 89 possible values.</li>
    <li>&quot;<b>event_type</b>&quot; - This key will hold the value &quot;<b>ugc_create_item</b>&quot;</li>
    <li>&quot;<b>legal_agreement_required</b>&quot; - Will be <tt>true</tt> or <tt>false</tt> (see the <a href="https://partner.steamgames.com/documentation/ugc#Legal" target="_blank">Steam docs</a> for more details)</li>
    <li>&quot;<b>published_file_id</b>&quot; - This key holds the unique published ID for the item, which is an int64 (and you may need to cast it as such when using it in subsequent functions using the <a href="../../Variable_Functions/int64.htm"><tt>int64()</tt></a>      function)</li>
  </ul>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">steam_ugc_create_item(consumer_app_id, file_type);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>consumer_app_id</td>
        <td>The unique App ID for your game on Steam.</td>
      </tr>
      <tr>
        <td>file_type</td>
        <td>One of the available file type constants (listed below).</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code">Async ID</p>
  <p> </p>
  <h4>Extended Example:</h4>
  <p>In this example we first call the function and store the async ID value in a variable:</p>
  <p class="code">var app_id = steam_get_app_id();<br/> new_item = steam_ugc_create_item(app_id, ugc_filetype_community);</p>
  <p>This would then send off a request to the Steam API to create the new Worksop item, generating an async event which we would deal with as follows:</p>
  <p class="code">var event_id = async_load[? &quot;id&quot;];<br/> if event_id == new_item<br/>     {
    <br/>     var type = async_load[? &quot;event_type&quot;];<br/>     if type == &quot;ugc_create_item&quot;<br/>         {
    <br/>         global.Publish_ID = async_load[? &quot;published_file_id&quot;];<br/>         }
    <br/>     }
  </p>
  <p>The above code checks the event type and if it is &quot;ugc_create_item&quot; then it retrieves the published file ID and stores it in a global variable for future reference.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Steam_UGC.htm">UGC</a></div>
        <div style="float:right">Next: <a href="steam_ugc_start_item_update.htm">steam_ugc_start_item_update</a></div>
      </div>
    </div>
    <h5>© Copyright YoYo Games Ltd. 2020 All Rights Reserved</h5>
  </div>
  <!-- KEYWORDS
steam_ugc_create_item
ugc_filetype_community
ugc_filetype_microtrans
-->
  <!-- TAGS
steam_ugc_create_item
-->

</body></html>