<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../../../..";
    gCommonRootRelPath = "../../../..";
    gTopicId = "9.2.7.6.0_1";
  
//]]></script>

  <script type="text/javascript" src="../../../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../../../template/styles/topic.min.css"/>
  <link rel="stylesheet" type="text/css" href="../../../../template/Charcoal_Grey/topicheader.css"/>
  <meta name="topic-status" content="Draft"/>

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <title>virtual_key_add</title>
  <meta name="generator" content="Adobe RoboHelp 2019"/>
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css"/>
  <meta name="rh-authors" content="Mark Alexander"/>
  <meta name="topic-comment" content="Reference page for virtual_key_add"/>
  <meta name="rh-index-keywords" content="virtual_key_add"/>
  <meta name="search-keywords" content="virtual_key_add"/>
</head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header" onclick="rh._.goToFullLayout()">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="virtual_key_add">
        <span>virtual_key_add</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <span>Click here to see this page in full context</span>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>






  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>virtual_key_add</h1>
  <p>This function enables you to map &quot;touches&quot; of a screen area to keyboard events. This means that once you have assigned an area to a virtual key, all touches on that area will trigger the keyboard event corresponding to the key you have mapped
    to the area. You can assign each virtual key you define to a variable too, which can then be used in the further virtual key functions to show, hide and delete them. These keys are assigned on a <i>per room</i> basis and will be automatically removed
    by GameMaker Studio 2 when changing rooms.</p>
  <p>The actual position of the virtual key is based on the <i>screen</i> position rather than room position and so the x/y values are absolute on the screen. This means that you don&#39;t need to worry about the use of views or the relative room coordinates,
    and can simply draw your key sprites and define your virtual keys in the <a href="../../../../The_Asset_Editors/Object_Properties/Draw_Events.htm">Draw GUI Event</a> of an object.</p>
  <p> </p>
  <h4>Syntax</h4>
  <p class="code">virtual_key_add(x, y, w, h, keycode);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>x</td>
        <td>The x coordinate (left side) of the virtual key <i>on the screen</i></td>
      </tr>
      <tr>
        <td>y</td>
        <td>The y coordinate (top side) of the virtual key <i>on the screen</i></td>
      </tr>
      <tr>
        <td>w</td>
        <td>The width of the virtual key</td>
      </tr>
      <tr>
        <td>h</td>
        <td>The height of the virtual key</td>
      </tr>
      <tr>
        <td>keycode</td>
        <td>Which keyboard key event should be triggered by touching this area</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code">index of virtual key</p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">global.Left = virtual_key_add(32, 32, 64, 64, vk_left);</p>
  <p>The above code creates a virtual key 64x64 pixels square, positioned on the screen at (32, 32) which will trigger the vk_left event when touched and assigns the index of this virtual key to a global variable.</p>
  <p><b></b></p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Virtual_Keys_And_Keyboards.htm">Virtual Keys And Keyboards</a></div>
        <div style="float:right">Next: <a href="virtual_key_show.htm">virtual_key_show</a></div>
      </div>
    </div>
    <h5>© Copyright YoYo Games Ltd. 2020 All Rights Reserved</h5>
  </div>
  <!-- KEYWORDS
virtual_key_add
-->
  <!-- TAGS
virtual_key_add
-->

</body></html>