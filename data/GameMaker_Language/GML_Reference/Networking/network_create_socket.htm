<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../../..";
    gCommonRootRelPath = "../../..";
    gTopicId = "9.2.13.0_3";
  
//]]></script>

  <script type="text/javascript" src="../../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../../template/styles/topic.min.css"/>
  <link rel="stylesheet" type="text/css" href="../../../template/Charcoal_Grey/topicheader.css"/>
  <meta name="topic-status" content="Draft"/>

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <title>network_create_socket</title>
  <meta name="generator" content="Adobe RoboHelp 2019"/>
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css"/>
  <meta name="rh-authors" content="Mark Alexander"/>
  <meta name="topic-comment" content="Reference page for network_create_socket"/>
  <meta name="rh-index-keywords" content="network_create_socket,network_socket_tcp,network_socket_udp,network_socket_ws,network_socket_bluetooth"/>
  <meta name="search-keywords" content="network_create_socket,network_socket_tcp,network_socket_udp,network_socket_ws,network_socket_bluetooth"/>
</head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header" onclick="rh._.goToFullLayout()">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="network_create_socket">
        <span>network_create_socket</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <span>Click here to see this page in full context</span>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>network_create_socket</h1>
  <p>This function is used to create a new client socket for your game to communicate over the network. You must define the socket type (see the list of constants below) and the function will return a unique <i>id</i> for that socket, which should be used
    in all further function calls for that socket, or a value of less than 0 if the connection fails.</p>
  <p class="note"><b>NOTE</b>: You can use the IP &quot;127.0.0.1&quot; to connect back to the same device that is running the game.</p>
  <p> </p>
  <table>
    <tbody>
      <tr>
        <th>Constant</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>network_socket_tcp</td>
        <td>Create a socket using TCP.</td>
      </tr>
      <tr>
        <td>network_socket_udp</td>
        <td>Create a socket using UDP.</td>
      </tr>
      <tr>
        <td>network_socket_ws</td>
        <td>Create a web socket (<i>only</i> for projects running on HTML5), using TCP.</td>
      </tr>
      <tr>
        <td>network_socket_bluetooth</td>
        <td>Create a bluetooth socket (<i>currently unavailable!</i>).</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">network_create_socket(type);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>type</td>
        <td>The type of socket connection to create (see the constants listed below).</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code">Real</p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">if os_browser == browser_not_a_browser<br/>     {
    <br/>     client = network_create_socket(network_socket_tcp);<br/>     network_connect( client, &quot;192.134.0.1&quot;, 6510 );<br/>     }
    <br/> else
    <br/>     {
    <br/>     client = network_create_socket(network_socket_ws);<br/>     network_connect( client, &quot;192.134.0.1&quot;, 6520 );<br/>     }
  </p>
  <p>The above code will check whether the game is running in a browser or not and create a new TCP or Web socket before attempting to connect through that to the given IP address on the given port.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Networking.htm">Networking</a></div>
        <div style="float:right">Next: <a href="network_create_socket_ext.htm">network_create_socket_ext</a></div>
      </div>
    </div>
    <h5>© Copyright YoYo Games Ltd. 2020 All Rights Reserved</h5>
  </div>
  <!-- KEYWORDS
network_create_socket
network_socket_tcp
network_socket_udp
network_socket_ws
network_socket_bluetooth
-->
  <!-- TAGS
network_create_socket
-->

</body></html>