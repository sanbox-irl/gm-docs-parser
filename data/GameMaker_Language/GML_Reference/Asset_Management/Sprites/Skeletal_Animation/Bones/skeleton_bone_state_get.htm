<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../../../../../..";
    gCommonRootRelPath = "../../../../../..";
    gTopicId = "9.2.2.3.4.4.0_3";
  
//]]></script>

  <script type="text/javascript" src="../../../../../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../../../../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../../../../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../../../../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../../../../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../../../../../template/styles/topic.min.css"/>
  <link rel="stylesheet" type="text/css" href="../../../../../../template/Charcoal_Grey/topicheader.css"/>
  <meta name="topic-status" content="Draft"/>

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <title>skeleton_bone_state_get</title>
  <meta name="generator" content="Adobe RoboHelp 2019"/>
  <link rel="stylesheet" href="../../../../../../assets/css/default.css" type="text/css"/>
  <meta name="rh-authors" content="Mark Alexander"/>
  <meta name="topic-comment" content="Page explaining the function skeleton_bone_state_get"/>
  <meta name="rh-index-keywords" content="skeleton_bone_state_get"/>
  <meta name="search-keywords" content="skeleton_bone_state_get"/>
</head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header" onclick="rh._.goToFullLayout()">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="skeleton_bone_state_get">
        <span>skeleton_bone_state_get</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <span>Click here to see this page in full context</span>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>skeleton_bone_state_get</h1>
  <p>Your skeletal animation is made up of a number of &quot;bones&quot;, which you will have defined and given names to in your animation program, and this function can be used to get certain data for the named bone at any time. Note that this data refers
    to the <b>current</b> pose for the skeleton, depending on the animation set used, and the function requires a previously created <a href="../../../../Data_Structures/DS_Maps/DS_Maps.htm">DS map</a>, which will then have the following keys and their
    equivalent values after calling the function:</p>
  <ul class="colour">
    <li><b>&quot;x&quot;:</b> The local x position of the bone relative to the parent bone.</li>
    <li><b>&quot;y&quot;:</b> The local y position of the bone relative to the parent bone.</li>
    <li><b>&quot;angle&quot;:</b> The local rotation of the bone relative to the parent bone.</li>
    <li><b>&quot;xscale&quot;:</b> The local horizontal scale of the bone, in reference to the parent bone.</li>
    <li><b>&quot;yscale&quot;:</b> The local vertical scale of the bone, in reference to the parent bone.</li>
    <li><b>&quot;worldScaleX&quot;:</b> The magnitude (always positive) of the world scale X (this is a <i>read only</i> value).</li>
    <li><b>&quot;worldScaleY&quot;:</b> The magnitude (always positive) of the world scale Y (this is a <i>read only</i> value).</li>
    <li><b>&quot;worldAngleX&quot;:</b> The world rotation for the X axis (this is a <i>read only</i> value).</li>
    <li><b>&quot;worldAngleY&quot;:</b> The world rotation for the Y axis (this is a <i>read only</i> value).</li>
    <li><b>&quot;worldX&quot;:</b> The world X position (this is a <i>read only</i> value).</li>
    <li><b>&quot;worldY&quot;:</b> The world Y position (this is a <i>read only</i> value).</li>
    <li><b>&quot;appliedAngle&quot;:</b> This is the local rotation used to pose the skeleton bones.</li>
    <li><b>&quot;parent&quot;:</b> The name (a string) of the parent bone.</li>
  </ul>
  <p>The map data returned is similar to that returned for the default pose when you use <a href="skeleton_bone_state_get.htm"><tt>skeleton_bone_data_get</tt></a>, only now you have the extra &quot;world&quot; keys. These refer to the position of the bone
    relative to the <i>root</i> (origin) of the skeletal animation sprite, and the returned values do not take into consideration any scaling or rotation that has been done by setting the built-in sprite variables like <tt>image_xscale</tt> or <tt>image_angle</tt>.
    The world values are <i>read only</i> and cannot be set.</p>
  <p>This function is provided so that you can &quot;intercept&quot; animation data and modify it before it is drawn on the screen, and as such you would want to use it in the <a href="../../../../../../The_Asset_Editors/Object_Properties/Other_Events.htm">Other - Animation Update</a>    event, since this event is triggered just before the Draw Events.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">skeleton_bone_state_get(bone, map);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>bone</td>
        <td>The name (as a string) of the bone.</td>
      </tr>
      <tr>
        <td>map</td>
        <td>The (previously created) ds_map that stores the bone data.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code">N/A</p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">var map = ds_map_create();<br/> skeleton_bone_state_get(&quot;head&quot;, map);<br/> var xx = ds_map_find_value(map, &quot;worldX&quot;);<br/> var yy = ds_map_find_value(map, &quot;worldY&quot;);<br/> var deltax = mouse_x - (x + xx);<br/> var deltay
    = mouse_y - (y + yy);<br/> var angle = -radtodeg(arctan2(deltay, deltax));<br/> ds_map_replace(map, &quot;angle&quot;, angle);<br/> skeleton_bone_state_set(&quot;head&quot;, map);<br/> ds_map_destroy(map);
  </p>
  <p>The above code creates a ds_map and then populates it with the data from the bone named &quot;head&quot;. It then extracts the world position for the bone, and uses that data to set the &quot;angle&quot; of the bone to track the mouse position in the
    game.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Bones.htm">Bones</a></div>
        <div style="float:right">Next: <a href="skeleton_bone_state_set.htm">skeleton_bone_state_set</a></div>
      </div>
    </div>
    <h5>© Copyright YoYo Games Ltd. 2020 All Rights Reserved</h5>
  </div>
  <!-- KEYWORDS
skeleton_bone_state_get
-->
  <!-- TAGS
skeleton_bone_state_get
-->

</body></html>