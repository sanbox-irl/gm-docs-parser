<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../../../../../..";
    gCommonRootRelPath = "../../../../../..";
    gTopicId = "9.2.2.3.4.6.0_3";
  
//]]></script>

  <script type="text/javascript" src="../../../../../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../../../../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../../../../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../../../../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../../../../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../../../../../template/styles/topic.min.css"/>
  <link rel="stylesheet" type="text/css" href="../../../../../../template/Charcoal_Grey/topicheader.css"/>
  <meta name="topic-status" content="Draft"/>

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <title>skeleton_get_bounds</title>
  <meta name="generator" content="Adobe RoboHelp 2019"/>
  <link rel="stylesheet" href="../../../../../../assets/css/default.css" type="text/css"/>
  <meta name="rh-authors" content="Mark Alexander"/>
  <meta name="topic-comment" content="Page explaining the function skeleton_get_bounds"/>
  <meta name="rh-index-keywords" content="skeleton_get_bounds"/>
  <meta name="search-keywords" content="skeleton_get_bounds"/>
</head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header" onclick="rh._.goToFullLayout()">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="skeleton_get_bounds">
        <span>skeleton_get_bounds</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <span>Click here to see this page in full context</span>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>skeleton_get_bounds</h1>
  <p>This function will return an array of values associated with any given bounding box for the currently assigned skeleton animation sprite. You supply the index number for the bounding box to get the details of (you can retrieve the total number of bounding
    boxes for the sprite using the function <a href="skeleton_get_num_bounds.htm"><tt>skeleton_get_num_bounds()</tt></a>) and the functin will return an array with the following elements:</p>
  <ul class="colour">
    <li>[0] - the number of points on the bounding box (a real)</li>
    <li>[1] - the name of the bounding box (a string)</li>
    <li>[2] - the x position of the first point</li>
    <li>[3] - the y position of the first point</li>
    <li>[etc...] - further x/y position data up to the number of points on the bounding box</li>
  </ul>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">skeleton_get_bounds(index);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>index</td>
        <td>The bounding box index to get the values of.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code">Array (minimum 2 elements: numPoints, name [, xPos, yPos, etc...])</p>
  <p> </p>
  <h4>Example:</h4>
  <p></p>
  <p class="code">var num = skeleton_get_num_bounds();<br/> var yy = 60;<br/> for(var i = 0; i &lt; num; i++;)<br/>     {
    <br/>     var b_info = skeleton_get_bounds(i);<br/>     if b_info[0] &gt; 0<br/>         {
    <br/>         var data = b_info[1] + &quot;:&quot;;<br/>         for(var j = 0; j &lt; b_info[0]; j++;)<br/>             {
    <br/>             data += &quot; (&quot; + string(b_info[(j * 2) + 2]) + &quot;, &quot; + string(b_info[(j * 2) + 2 + 1]) + &quot;)&quot;;<br/>             }
    <br/>         draw_text(20, yy, data);<br/>         yy += 20;<br/>         }
    <br/>     }
  </p>
  <p>The above code will loop through each of the bounding boxes associated with the currently assigned sprite and then draw that data as a string to the screen.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Drawing_And_Miscellaneous.htm">Drawing And Miscellaneous</a></div>
        <div style="float:right">Next: <a href="skeleton_collision_draw_set.htm">skeleton_collision_draw_set</a></div>
      </div>
    </div>
    <h5>© Copyright YoYo Games Ltd. 2020 All Rights Reserved</h5>
  </div>
  <!-- KEYWORDS
skeleton_get_bounds
-->
  <!-- TAGS
skeleton_get_bounds
-->

</body></html>