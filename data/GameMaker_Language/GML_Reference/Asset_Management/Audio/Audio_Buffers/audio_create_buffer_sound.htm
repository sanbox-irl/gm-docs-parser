<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../../../../..";
    gCommonRootRelPath = "../../../../..";
    gTopicId = "9.2.2.5.4.0_1";
  
//]]></script>

  <script type="text/javascript" src="../../../../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../../../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../../../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../../../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../../../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../../../../template/styles/topic.min.css"/>
  <link rel="stylesheet" type="text/css" href="../../../../../template/Charcoal_Grey/topicheader.css"/>
  <meta name="topic-status" content="Draft"/>

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <title>audio_create_buffer_sound</title>
  <meta name="generator" content="Adobe RoboHelp 2019"/>
  <link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css"/>
  <meta name="rh-authors" content="Mark Alexander"/>
  <meta name="topic-comment" content="Page explaining the function audio_create_buffer_sound"/>
  <meta name="rh-index-keywords" content="audio_create_buffer_sound"/>
  <meta name="search-keywords" content="audio_create_buffer_sound,audio_mono,audio_stereo,audio_3D"/>
</head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header" onclick="rh._.goToFullLayout()">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="audio_create_buffer_sound">
        <span>audio_create_buffer_sound</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <span>Click here to see this page in full context</span>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>audio_create_buffer_sound</h1>
  <p>With this function you can create a new sound from the contents of a buffer. The buffer will have been created previously (see the <a href="../../../Buffers/Buffers.htm">buffer functions</a> for details on how to do this), and have had data added or
    loaded into it. You then pass it to this function with the data format (only <tt>buffer_u8</tt> or <tt>buffer_s16</tt> are currently supported), the sample rate (which can be between 1000hz and 48000hz), and an offset into the buffer to get the data
    from. You also need to supply the number of samples in the buffer and the channels that the sound requires. These channels are defined by one of the following constants:</p>
  <p> </p>
  <table>
    <tbody>
      <tr>
        <th>Constant</th>
        <th>Description</th>
      </tr>
      <tr>
        <td><span class="inline">audio_mono</span></td>
        <td>Mono (single channel) audio.</td>
      </tr>
      <tr>
        <td><span class="inline">audio_stereo</span></td>
        <td>Stereo (dual channel) audio.</td>
      </tr>
      <tr>
        <td><span class="inline">audio_3D</span></td>
        <td>3D (5.1) audio.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <p>Note that after you have created a sound, you should free the pointer index associated with it when it is no longer required using the function <a href="audio_free_buffer_sound.htm"><tt>audio_free_buffer_sound()</tt></a>. If you fail to do this and
    then re-assign the variable or change rooms etc... the sound ID will be lost and you will have a memory leak. Also note that you cannot delete the buffer if any sound has been created from it and the sound has not been freed up first. So you would
    free the sound (or sounds) first, <i>then</i> delete the buffer. It is also worth noting that adding anything to the buffer, or changing the buffer size, after it has had a sound created from it will give unexpected results and it is not recommended
    - once you have started creating sounds from any buffer you should not manipulate it in any other way afterwards.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">audio_create_buffer_sound(bufferId, bufferFormat, bufferRate, bufferOffset, bufferLength, bufferChannels);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>bufferId</td>
        <td>The ID of the buffer to use.</td>
      </tr>
      <tr>
        <td>bufferFormat</td>
        <td>The format of the data in the buffer (<tt>buffer_u8</tt> or <tt>buffer_s16</tt>).</td>
      </tr>
      <tr>
        <td>bufferRate</td>
        <td>The sample rate of the data in the buffer.</td>
      </tr>
      <tr>
        <td>bufferOffset</td>
        <td>The offset into the buffer to read the sample data from (in bytes).</td>
      </tr>
      <tr>
        <td>bufferLength</td>
        <td>The length of the buffer (the number of bytes of audio data, excluding the header).</td>
      </tr>
      <tr>
        <td>bufferChannels</td>
        <td>The channels to use from one of the constants listed below.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code">Integer (Sound ID)</p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">var rate = 44100;<br/> var hertz = irandom_range(220, 880);<br/> var samples = 44100;<br/> var bufferId = buffer_create(rate, buffer_fast, 1);<br/> var buffer_seek(bufferId, buffer_seek_start, 0);<br/> var num_to_write = rate / hertz;<br/> var length
    = buffer_get_size(bufferId) ;<br/> var val_to_write = 1;<br/> for (var i = 0; i &lt; (samples / num_to_write) + 1; i++;)<br/>    {
    <br/>    for (var j = 0; j &lt; num_to_write; j++;)<br/>       {
    <br/>       buffer_write(bufferId, buffer_u8, val_to_write * 255);<br/>       }
    <br/>    val_to_write = (1 - val_to_write);<br/>    }
    <br/> soundId = audio_create_buffer_sound(bufferId, buffer_u8, rate, 0, length, audio_stereo);</p>
  <p>The above creates a buffer and then procedurally fills it with data. This data is then used to create a new sound, which is stored in the variable &quot;soundId&quot;.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="../Audio.htm">Audio Buffers</a></div>
        <div style="float:right">Next: <a href="audio_free_buffer_sound.htm">audio_free_buffer_sound</a></div>
        <div style="float:right"> </div>
      </div>
    </div>
    <h5>© Copyright YoYo Games Ltd. 2020 All Rights Reserved</h5>
  </div>
  <!-- KEYWORDS
audio_create_buffer_sound
audio_mono
audio_stereo
audio_3D
-->
  <!-- TAGS
audio_create_buffer_sound
-->

</body></html>